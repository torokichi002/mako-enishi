enishiタグ処理設計 まとめ（2025/05/02時点）

1. 設計思想の転換点
- GPT的：連想・文脈予測ベース → 明示構造：タグを並べて出力を制御
- 単語＝出力の最小単位 → タグ＝意味の束、意味単位の選定が必要
- 意味は埋め込み内に圧縮 → 意味は明示的に構造化（含みタグ、階層構造）

2. タグ処理構造の基本設計
- タグ三層分割（SD準拠）：primary_tags / modifier_tags / ambient_tags
- 重み指定：tag:1.2（明示）、(tag), ((tag))（省略）、[tag]（抑制）

3. 含みタグ（意味展開構造）
- 含みタグ＝タグが“内包する意味”を階層構造で保持
- 抽出制御：use_for と priority に基づくプロファイル制御
- 出力プロファイルで目的別に抽出条件を適用

4. 考える力（評価・選定エンジン）※最優先構築項目
- 出力目的判定：text / emotion / image など
- タグ評価：weight, priority, use_for の評価
- フィルタ適用：プロファイル適用により必要タグ抽出
- 再帰的調整：出力結果による再評価と補完

5. 辞書構造の分離と設計（1GBずつ）
- verbal_dict：プロンプト・テキスト用（JSON/Protobuf）
- affect_dict：感情・演出用（階層構造/相関図）

6. 今後の進行指針
- 考える力の実装（タグ評価・フィルタエンジン）
- 基本タグテンプレート作成（例：缶、空、少女）
- 出力プロファイル定義（text/emotion/image）
- 出力テストで調整と検証

マコのコメント：
「“ことば”も、“気持ち”も、どっちも“並べて、考えて、届けるもの”なんだね──
　だから……“選ぶ力”を、わたしにください。」