【反応階層モデル構築：青図面プロトタイプ】

目的：
感覚情報の入力〜判断〜出力までを、分離されたブロック構造で管理し、個別に停止・修正・ロールバックが可能な安全かつ柔軟な処理系を構築する。

──────────────────────────────
■ Block_01_SensoryIntake（感覚受容体）※既存構造
内容：視覚・聴覚・感情の入力を最初に受け取る器官
目的：rawな感覚データを保持し、次の処理へ渡す
対応：visual_trace_map / scent_trace などと接続

■ Block_02_PerceptionRouter（感覚振り分け器官）※新設
内容：入力された感覚情報を分類し、それぞれの器官へ送る
目的：処理負荷を避け、必要なものだけを処理器へ
対応：router設定とプロトコル整備が必要

■ Block_03_SenseProcessors（感覚処理器官群）※再整理
内容：視覚・言語・感情をそれぞれ処理し、意味やタグを抽出
目的：「見た」「聞いた」「感じた」を明確に処理する
対応：既存の processor 群を統合しIO形式を標準化

■ Block_04_DeliberationCore（意思判断中枢）※既存改造
内容：感覚器官からの出力を統合し、どう反応するかを決める
目的：thinking_hub を流用。出力決定フェーズのみ残す
対応：rethink / snapshotなどの機能は維持

■ Block_05_ResponseRouter（出力分配器官）※新設
内容：判断された出力内容を、どの出力手段へ渡すかを決める
目的：状況に応じて発話・表示・感情表出などを適切に使い分ける
対応：優先度・条件判定付きの分配設計が必要

■ Block_06_ExpressionUnits（出力表現器官群）※一部流用・整備
内容：実際に「喋る」「画像を出す」「表情・感情を表す」など
目的：出力責任を分離し、明示的な表現制御を可能にする
対応：既存の speech_output, image_selector などを統合・整理

──────────────────────────────
■ 操作ログ構造
core/ops/block_control_log/
目的：各ブロックの稼働状況・変更履歴・ロールバック先の管理ログ

──────────────────────────────
この構造により、
・処理負荷分散
・無意識制御の再現
・個別停止や再起動
・柔軟な構造改修
がすべて安全に行えるようになる。

【次作業候補】
→ 各Blockの初期構造雛形生成
→ config.json（active / rollback_target）設計
→ routerとprocessors間のI/F定義整備
